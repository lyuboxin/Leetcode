# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def zigzagLevelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        self.dic = collections.defaultdict(list)
        self.traverse(root, 0)
        return self.dic.values()
    
    def traverse(self, node, degree):
        if node:
            if degree in self.dic:
                if degree%2 != 0:
                    self.dic[degree].insert(0, node.val)
                else:
                    self.dic[degree].append(node.val)
            else:
                self.dic[degree] = [node.val]
            self.traverse(node.left, degree+1)
            self.traverse(node.right, degree+1)
