class Solution(object):
    def uniquePaths(self, m, n):
        """
        :type m: int
        :type n: int
        :rtype: int
        """   
        self.memo = [[0] * n for x in range(m)]
        return self.uniquePathsSub(m, n)
    
    def uniquePathsSub(self, i, j):
        if i <= 1 and j <= 1:
            return 1
        if self.memo[i-1][j-1] != 0:
            return self.memo[i-1][j-1]
        result = (self.uniquePathsSub(i-1, j) if i- 1 > 0 else 0) + (self.uniquePathsSub(i, j-1) if j-1 > 0 else 0)
        self.memo[i-1][j-1] = result
        return result
