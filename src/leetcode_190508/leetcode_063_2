class Solution(object):
    def uniquePathsWithObstacles(self, obstacleGrid):
        """
        :type obstacleGrid: List[List[int]]
        :rtype: int
        """
        m = len(obstacleGrid)
        n = len(obstacleGrid[0])
        memo = [[0] * n for x in range(m)]
        for i in range(m):
            for j in range(n):
                if obstacleGrid[i][j] != 1:
                    if i == 0 and j == 0:
                        memo[i][j] = 1
                    else:
                        memo[i][j] = (memo[i-1][j] if i-1 >= 0 else 0) + (memo[i][j-1] if j-1 >= 0 else 0)
                else:
                    memo[i][j] = 0
        return memo[m-1][n-1]
