# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def hasPathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: bool
        """
        if self.compare(root, sum) == -1:
            return False
        else:
            return self.compare(root, sum)
    
    def compare(self, node, sum):
        if node == None:
            return -1
        left = self.compare(node.left, sum - node.val)
        right = self.compare(node.right, sum - node.val)
        if left == -1 and right == -1:
            if sum == node.val:
                return 1
            else:
                return 0
        elif left == -1 and right != -1:
            if right:
                return 1
            else:
                return 0
        elif left != -1 and right == -1:
            if left:
                return 1
            else:
                return 0
        else:
            if right or left:
                return 1
            else:
                return 0
