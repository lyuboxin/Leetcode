# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def invertTree(self, root):
        """
        :type root: TreeNode
        :rtype: TreeNode
        """
        return self.invert(root)
        
    def invert(self, node):
        if node == None:
            return None 
        left = self.invert(node.left)
        right = self.invert(node.right)
        if left == None and right != None:
            node.right, node.left = None, node.right
            return node
        elif left != None and right == None:
            print "bbb"
            node.left, node.right = None, node.left
            return node
        elif left != None and right != None:
            node.left, node.right = node.right, node.left
            return node
        else:
            return node
