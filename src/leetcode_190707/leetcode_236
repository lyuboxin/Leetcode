# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def lowestCommonAncestor(self, root, p, q):
        """
        :type root: TreeNode
        :type p: TreeNode
        :type q: TreeNode
        :rtype: TreeNode
        """
        self.ans = None
        self.p = p
        self.q = q
        self.traverse(root)
        return self.ans
        
        
    def traverse(self, node):
        if self.ans:
            return False
        if node:
            if self.traverse(node.left) and self.traverse(node.right):
                self.ans = TreeNode(node.val)
                return False
            elif self.traverse(node.left) or self.traverse(node.right):
                if node == self.p or node == self.q:
                    self.ans = TreeNode(node.val)
                    return False
                return True
            else:
                if node == self.p or node == self.q:
                    return True
                else:
                    return False
        else:
            return False
