# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def addOneRow(self, root, v, d):
        """
        :type root: TreeNode
        :type v: int
        :type d: int
        :rtype: TreeNode
        """
        self.v = v
        self.d = d
        if d == 1:
            new_root = TreeNode(v)
            new_root.left = root
            return new_root
        else:
            self.traverse(root, 1)
            return root
        
    def traverse(self, node, degree):
        if node:
            if degree == self.d -1:
                new_node_left = TreeNode(self.v)
                new_node_right = TreeNode(self.v)
                node.left, new_node_left.left = new_node_left, node.left
                node.right, new_node_right.right = new_node_right, node.right
            self.traverse(node.left, degree+1)
            self.traverse(node.right, degree+1)
