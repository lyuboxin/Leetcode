class Solution(object):
    def minFallingPathSum(self, A):
        """
        :type A: List[List[int]]
        :rtype: int
        """
        n = len(A)
        m = len(A[0])
        dp = [[0]* n for _ in range(m)]
        for i in range(n):
            for j in range(m):
                if i == 0:
                    dp[i][j] = A[i][j]
                else:
                    if j -1 >= 0 and j+1 < m:
                        dp[i][j] = A[i][j] + min(dp[i-1][j-1], dp[i-1][j], dp[i-1][j+1])
                    elif j - 1 < 0 and j+1 < m:
                        dp[i][j] = A[i][j] + min(dp[i-1][j], dp[i-1][j+1])
                    elif j - 1 >= 0 and j+1 >= m:
                        dp[i][j] = A[i][j] + min(dp[i-1][j-1], dp[i-1][j])
                    else:
                        dp[i][j] = A[i][j] + dp[i-1][j]
        return min(dp[-1])
